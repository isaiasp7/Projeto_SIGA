/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.poo_project.Tela_Requisitante.PaineisEspecificos;

import DAO.PedidoDAO;
import DAO.ProdutoDAO;
import DTO.ProdutoDTO;
import Login.RequisitanteLogin;
import Model.Pedido;
import Model.StatusPedido;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Isaias
 */
public class Situacao extends javax.swing.JPanel {

    private ProdutoDAO prod = new ProdutoDAO();
    private HashMap<Pedido, List<ProdutoDTO>> lista = new HashMap<>();

    /**
     * Creates new form Situacao1
     */
    public Situacao() {
        try {
             lista = new PedidoDAO().requestByIdRequisitante(RequisitanteLogin.getId());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Essa empresa ainda não possui nenhuma requisição de pedido");
        }
       
        initComponents();
        this.renderizaDados();
        //System.out.println("tela iniciada");
         // Aplica o centralizador a todas as colunas
          DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        for (int i = 0; i < jTableDefault.getColumnCount(); i++) {
            jTableDefault.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            jTableDetalhada.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
        DefaultTableCellRenderer headerRenderer = (DefaultTableCellRenderer) jTableDefault.getTableHeader().getDefaultRenderer();
        DefaultTableCellRenderer headerRenderer2 = (DefaultTableCellRenderer) jTableDetalhada.getTableHeader().getDefaultRenderer();
        headerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        headerRenderer2.setHorizontalAlignment(SwingConstants.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDefault = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDetalhada = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabelValorTotal = new javax.swing.JLabel();

        setBackground(new java.awt.Color(7, 23, 57));
        setMinimumSize(new java.awt.Dimension(872, 557));
        setPreferredSize(new java.awt.Dimension(872, 557));

        jTableDefault.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTableDefault.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Pedido", "Situação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDefault.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDefaultMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableDefault);
        if (jTableDefault.getColumnModel().getColumnCount() > 0) {
            jTableDefault.getColumnModel().getColumn(0).setResizable(false);
            jTableDefault.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Situação dos pedidos");

        jTableDetalhada.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTableDetalhada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Produto", "Nome", "Quantidade desejada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDetalhada.setMinimumSize(new java.awt.Dimension(30, 80));
        jScrollPane2.setViewportView(jTableDetalhada);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(">>");

        jButton1.setText("Cancelar Pedido");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabelValorTotal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelValorTotal.setForeground(new java.awt.Color(255, 255, 255));
        jLabelValorTotal.setText("O valor do pedido aparece aqui...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 872, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jLabel1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabelValorTotal))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jButton1)))
                .addGap(82, 82, 82))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
             if (jTableDefault.getSelectedRow()<=-1) {
            JOptionPane.showMessageDialog(this, "Nenhuma linha foi selecionada");
        }else{
             int opcao = JOptionPane.showConfirmDialog(null,"Tem certeza que deseja cancelar o pedido:",
          "Confirme a ação",JOptionPane.YES_NO_OPTION);
             if (opcao==JOptionPane.YES_OPTION) {
                  Object selectRowTable = jTableDefault.getValueAt(jTableDefault.getSelectedRow(), 0);
                  for (Pedido pedido : lista.keySet()) {
                      if (pedido.getId_pedido().equals(selectRowTable) && pedido.getStatus().contains("Pendente")) {
                           pedido.setStatus(StatusPedido.Recusado);
                           new PedidoDAO().updatePedido(pedido, pedido.getId_pedido());
                          
                           JOptionPane.showMessageDialog(this, "Pedido cancelado com sucesso!!.","Ação concluida",JOptionPane.OK_OPTION);
                           this.renderizaDados();
                           
                          break;
                      }
                 }
        }
             
                          
                      
        }
 
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTableDefaultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDefaultMouseClicked
        // TODO add your handling code here:
        if (jTableDefault.getSelectedRow() != -1) {
            DefaultTableModel model = (DefaultTableModel) jTableDetalhada.getModel();
            model.setRowCount(0);
            Integer idNaTabela = Integer.parseInt(jTableDefault.getValueAt(jTableDefault.getSelectedRow(), 0).toString());
            System.out.println("row select");
            for (Map.Entry<Pedido, List<ProdutoDTO>> entry : lista.entrySet()) {
                Pedido pedido = entry.getKey();
                List<ProdutoDTO> val = entry.getValue();
                //System.out.println(pedido.getId_pedido() +"=="+ idNaTabela);
                if (pedido.getId_pedido().equals(idNaTabela)) {
                    System.out.println("if");
                    for (int i = 0; i < val.size(); i++) {
                        model.addRow(new Object[]{val.get(i).getProd().getId(),val.get(i).getProd().getNome(), val.get(i).getQuantidadeDesejada()});
                        jLabelValorTotal.setText("Valor do pedido: "+pedido.getValorTotal()); 
                    }

                }
            }

        }


    }//GEN-LAST:event_jTableDefaultMouseClicked
    private void renderizaDados() {//rendeiza pedidos feitos pela empresa
        DefaultTableModel model = (DefaultTableModel) jTableDefault.getModel();
        model.setRowCount(0);
        for (java.util.Map.Entry<Model.Pedido, java.util.List<DTO.ProdutoDTO>> entry : lista.entrySet()) {
            Pedido key = entry.getKey();
            model.addRow(new Object[]{key.getId_pedido(), key.getStatus()});

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelValorTotal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableDefault;
    private javax.swing.JTable jTableDetalhada;
    // End of variables declaration//GEN-END:variables
}
