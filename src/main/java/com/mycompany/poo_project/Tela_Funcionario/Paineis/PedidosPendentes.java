/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.poo_project.Tela_Funcionario.Paineis;

import DAO.PedidoDAO;
import Model.Pedido;
import Model.StatusPedido;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cliente
 */
public class PedidosPendentes extends javax.swing.JPanel {

    /**
     * Creates new form PedidosPendentes
     */
    public PedidosPendentes() {
        initComponents();

        DefaultTableModel modelo = new DefaultTableModel(
            new Object [][] {},
            new String [] {
                "Seleção", "ID", "Requisitante", "Data", "Total", "Status"
            }
        ) {
            Class[] types = new Class [] {
                Boolean.class, Integer.class, String.class, java.sql.Date.class, java.math.BigDecimal.class, String.class
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 0; // apenas checkbox editável
            }
        };

        tabelaPedidosPendentes.setModel(modelo);

        carregarDados();
    }
    
     private void carregarDados() {
        DefaultTableModel modelo = (DefaultTableModel) tabelaPedidosPendentes.getModel();
        modelo.setRowCount(0); 
        
        PedidoDAO dao = new PedidoDAO();
        List<Pedido> pedidos = dao.readPedido();

        for (Pedido p : pedidos) {
            if (p.getStatus() == StatusPedido.Pendente.name()) {
                modelo.addRow(new Object[]{
                    false,
                    p.getId_pedido(),
                    p.getId_requisitante(),
                    java.sql.Date.valueOf(p.getData_pedido()),
                    p.getValorTotal(),
                    p.getStatus().toString()
                });
            }
        }
        
    }
    
    
    private void atualizarStatusPedidos(List<Integer>ids, StatusPedido novoStatus){
        PedidoDAO pdao = new PedidoDAO();
        for (int id : ids) {
            Pedido p = new Pedido();
            p.setId_requisitante(2);
            p.setStatus(novoStatus);
            pdao.updatePedido(p,id);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPedidosPendentes = new javax.swing.JTable();
        btnVerProdutos = new javax.swing.JButton();
        btnAceitar = new javax.swing.JButton();
        btnRecusar = new javax.swing.JButton();

        tabelaPedidosPendentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Seleção", "ID", "Requisitante", "Data", "Total", "Status"
            }
        ));
        jScrollPane1.setViewportView(tabelaPedidosPendentes);

        jScrollPane2.setViewportView(jScrollPane1);

        btnVerProdutos.setText("Ver Produtos");
        btnVerProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerProdutosActionPerformed(evt);
            }
        });

        btnAceitar.setText("Aceitar");
        btnAceitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceitarActionPerformed(evt);
            }
        });

        btnRecusar.setText("Recusar");
        btnRecusar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecusarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVerProdutos)
                        .addGap(74, 74, 74)
                        .addComponent(btnAceitar)
                        .addGap(18, 18, 18)
                        .addComponent(btnRecusar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVerProdutos)
                    .addComponent(btnAceitar)
                    .addComponent(btnRecusar))
                .addContainerGap(31, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnVerProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerProdutosActionPerformed
        // TODO add your handling code here:
        int countSelected = 0;
        int idPedido = -1;

        for (int i = 0; i < tabelaPedidosPendentes.getRowCount(); i++) {
            Boolean isSelected = (Boolean) tabelaPedidosPendentes.getValueAt(i, 0);
            if (isSelected != null && isSelected) {
                countSelected++;
                idPedido = (int) tabelaPedidosPendentes.getValueAt(i, 1);
            }
        }

        if (countSelected == 0) {
            JOptionPane.showMessageDialog(this, "Selecione um pedido.");
            return;
        }

        if (countSelected > 1) {
            JOptionPane.showMessageDialog(this, "Selecione apenas um pedido por vez.");
            return;
        }

        // Aqui está a forma correta de exibir o JPanel como janela modal
        ProdutosPedido painelProdutos = new ProdutosPedido(idPedido);

        JDialog dialog = new JDialog();
        dialog.setTitle("Produtos do Pedido");
        dialog.setContentPane(painelProdutos);
        dialog.pack();
        dialog.setLocationRelativeTo(this); 
        dialog.setModal(true);              
        dialog.setVisible(true);            

    }//GEN-LAST:event_btnVerProdutosActionPerformed

    private void btnAceitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceitarActionPerformed
        // TODO add your handling code here:
        List<Integer> pedidosSelecionados = new ArrayList<>();

        for (int i = 0; i < tabelaPedidosPendentes.getRowCount(); i++) {
            Boolean isSelected = (Boolean) tabelaPedidosPendentes.getValueAt(i, 0);
            if (isSelected != null && isSelected) {
                int idPedido = (int) tabelaPedidosPendentes.getValueAt(i, 1);
                pedidosSelecionados.add(idPedido);
            }
        }

        if (pedidosSelecionados.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Selecione pelo menos um pedido.");
            return;
        }

        int opcao = JOptionPane.showConfirmDialog(this, "Deseja aceitar os pedidos selecionados?", "Confirmação", JOptionPane.YES_NO_OPTION);
        if (opcao == JOptionPane.YES_OPTION) {
            atualizarStatusPedidos(pedidosSelecionados, StatusPedido.Aprovado);
            JOptionPane.showMessageDialog(this, "Pedidos aceitos.");
            carregarDados();
        }

    }//GEN-LAST:event_btnAceitarActionPerformed

    private void btnRecusarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecusarActionPerformed
        // TODO add your handling code here:
        List<Integer> pedidosSelecionados = new ArrayList<>();

        for (int i = 0; i < tabelaPedidosPendentes.getRowCount(); i++) {
            Boolean isSelected = (Boolean) tabelaPedidosPendentes.getValueAt(i, 0);
            if (isSelected != null && isSelected) {
                int idPedido = (int) tabelaPedidosPendentes.getValueAt(i, 1);
                pedidosSelecionados.add(idPedido);
            }
        }

        if (pedidosSelecionados.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Selecione pelo menos um pedido.");
            return;
        }

        int opcao = JOptionPane.showConfirmDialog(this, "Deseja recusar os pedidos selecionados?", "Confirmação", JOptionPane.YES_NO_OPTION);
        if (opcao == JOptionPane.YES_OPTION) {
            atualizarStatusPedidos(pedidosSelecionados, StatusPedido.Recusado);
            JOptionPane.showMessageDialog(this, "Pedidos recusados.");
            carregarDados();
        }
    }//GEN-LAST:event_btnRecusarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceitar;
    private javax.swing.JButton btnRecusar;
    private javax.swing.JButton btnVerProdutos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabelaPedidosPendentes;
    // End of variables declaration//GEN-END:variables
}
