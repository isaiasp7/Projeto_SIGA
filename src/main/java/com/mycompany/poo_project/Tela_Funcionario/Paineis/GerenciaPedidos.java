/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.poo_project.Tela_Funcionario.Paineis;

import DAO.PedidoDAO;
import Model.Pedido;
import Model.StatusPedido;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cliente
 */
public class GerenciaPedidos extends javax.swing.JPanel {

    /**
     * Creates new form GerenciaPedidos
     */
    public GerenciaPedidos() {
        initComponents();
        configurarTabela();
        carregarDados();
    }
    
    private void configurarTabela() {
        javax.swing.table.DefaultTableModel modelo = new javax.swing.table.DefaultTableModel(
            new Object[][]{},
            new String[]{"Selecionar", "ID", "Requisitante", "Data", "Total", "Status"}
        ) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return columnIndex == 0 ? Boolean.class : String.class;
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 0; // Só a coluna de checkbox pode ser editada
            }
        };
        tabelaPedidos.setModel(modelo);
    }
    
    private void carregarDados() {
        DefaultTableModel model = (DefaultTableModel) tabelaPedidos.getModel();
        model.setRowCount(0); // Limpar a tabela

        List<Pedido> pedidos = new PedidoDAO().readPedido();

        for (Pedido p : pedidos) {
            model.addRow(new Object[]{
                false, // checkbox desmarcado
                p.getId_pedido(),
                p.getId_requisitante(),
                p.getData_pedido().toString(),
                p.getValorTotal(),
                p.getStatus()
            });
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPedidos = new javax.swing.JTable();
        btnAtualizar = new javax.swing.JButton();
        btnVerProdutos = new javax.swing.JButton();

        tabelaPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Seleção", "ID", "Requisitante", "Data", "Total", "Status"
            }
        ));
        jScrollPane1.setViewportView(tabelaPedidos);

        btnAtualizar.setText("Atualizar Status");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnVerProdutos.setText("Ver Produtos");
        btnVerProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerProdutosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVerProdutos)
                        .addGap(57, 57, 57)
                        .addComponent(btnAtualizar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAtualizar)
                    .addComponent(btnVerProdutos))
                .addGap(29, 29, 29))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tabelaPedidos.getModel();

        List<Integer> pedidosSelecionados = new ArrayList<>();

        for (int i = 0; i < model.getRowCount(); i++) {
            Boolean selecionado = (Boolean) model.getValueAt(i, 0);
            if (Boolean.TRUE.equals(selecionado)) {
                Integer idPedido = (Integer) model.getValueAt(i, 1);
                pedidosSelecionados.add(idPedido);
            }
        }

        if (pedidosSelecionados.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum pedido selecionado.");
            return;
        }

        StatusPedido novoStatus = (StatusPedido) JOptionPane.showInputDialog(
            this,
            "Escolha o novo status:",
            "Atualizar Status",
            JOptionPane.QUESTION_MESSAGE,
            null,
            StatusPedido.values(),
            StatusPedido.Pendente
        );

        if (novoStatus == null) return; 

        PedidoDAO dao = new PedidoDAO();
        for (Integer id : pedidosSelecionados) {
            Pedido p = new Pedido();
            p.setStatus(novoStatus);
            dao.updatePedido(p, id); 
        }

        JOptionPane.showMessageDialog(this, "Status atualizado com sucesso.");
        carregarDados(); 
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnVerProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerProdutosActionPerformed
        // TODO add your handling code here:
        int countSelected = 0;
        int idPedido = -1;

        for (int i = 0; i < tabelaPedidos.getRowCount(); i++) { 
            Boolean isSelected = (Boolean) tabelaPedidos.getValueAt(i, 0); 
            if (isSelected != null && isSelected) {
                countSelected++;
                idPedido = (int) tabelaPedidos.getValueAt(i, 1); 
            }
        }

        if (countSelected == 0) {
            JOptionPane.showMessageDialog(this, "Selecione um pedido.");
            return;
        }

        if (countSelected > 1) {
            JOptionPane.showMessageDialog(this, "Selecione apenas um pedido por vez.");
            return;
        }

        ProdutosPedido painelProdutos = new ProdutosPedido(idPedido);

        JDialog dialog = new JDialog();
        dialog.setTitle("Produtos do Pedido " + idPedido);
        dialog.setContentPane(painelProdutos);
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE); // para fechar corretamente
        dialog.pack();
        dialog.setLocationRelativeTo(this); 
        dialog.setModal(true);              
        dialog.setVisible(true);            

    }//GEN-LAST:event_btnVerProdutosActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnVerProdutos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaPedidos;
    // End of variables declaration//GEN-END:variables
}
